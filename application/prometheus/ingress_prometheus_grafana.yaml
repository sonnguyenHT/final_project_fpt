apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: prometheus-server-ingress
  namespace: prometheus
  # annotations:
    # nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    # nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    #nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
spec:
  ingressClassName: nginx
  rules:
  - host: prometheus.thaison.cloud
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: prometheus-kube-prometheus-prometheus
            port:
              name: http-web
  tls:
  - hosts:
    - prometheus.thaison.cloud
    secretName: self-tls
     #argocd-tls-secret
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: prometheus-grafana-ingress
  namespace: prometheus
  annotations:
    # nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    # nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
spec:
  ingressClassName: nginx
  rules:
  - host: grafana.thaison.cloud
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: prometheus-grafana
            port:
              name: http-web
  tls:
  - hosts:
    - grafana.thaison.cloud
    secretName: self-tls
     #argocd-tls-secret
